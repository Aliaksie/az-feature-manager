plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
//    id 'org.springframework.boot' version '2.7.2'
//    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
}

group = 'com'
version = '0.0.1-SNAPSHOT'


repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    compileOnly("org.springframework.boot:spring-boot-starter-actuator")
    compileOnly("org.springframework.cloud:spring-cloud-starter-bootstrap")
    compileOnly("org.springframework.boot:spring-boot-starter-webflux")
    compileOnly("org.springframework.boot:spring-boot-starter-web")
//    compileOnly("com.azure.spring:azure-spring-boot-starter-keyvault-secrets:4.0.0")
    compileOnly("com.azure.spring:azure-spring-cloud-appconfiguration-config:2.10.0")
    implementation("com.azure.spring:azure-spring-cloud-feature-management:2.10.0") {
        // todo!
//        exclude(group =  "*", module = "*")
        transitive = false
    }

    testImplementation("com.azure.spring:azure-spring-cloud-appconfiguration-config:2.10.0")
    testImplementation("org.springframework.boot:spring-boot-starter-actuator")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-starter-webflux")
    testImplementation("org.springframework.boot:spring-boot-starter-web")
    testImplementation("org.springframework.boot:spring-boot-test-autoconfigure")
    testImplementation("org.springframework.cloud:spring-cloud-starter")
    testImplementation("org.springframework.cloud:spring-cloud-starter-bootstrap")

    testImplementation("io.projectreactor:reactor-test")
//    testImplementation("com.github.tomakehurst:wiremock-jre8:3.0.1")
    testImplementation("org.wiremock:wiremock-standalone:3.4.1")

}

tasks["jar"].enabled = true
tasks["bootJar"].enabled = false

tasks.named('test') {
    useJUnitPlatform()
}